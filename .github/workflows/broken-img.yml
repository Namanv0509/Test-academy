name: Hugo Image Validation
on:
  pull_request:
    branches:
      - main
      - master
    paths:
      - 'content/**.md'
      - 'content/**.markdown'
      - 'static/images/**'
permissions:
  pull-requests: write
  issues: write

jobs:
  validate-images:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-frontmatter

      - name: Check image references
        run: |
          set -e
          
          # Valid image extensions
          VALID_EXTENSIONS="jpg|jpeg|png|gif|webp|svg"
          
          # Find all markdown files
          mapfile -t md_files < <(find content -type f \( -name "*.md" -o -name "*.markdown" \))
          
          exit_code=0
          
          for file in "${md_files[@]}"; do
            echo "Checking images in $file"
            
            # Extract image references from markdown
            images=$(grep -oE '!\[[^\]]*\]\([^\)]+\)' "$file" | sed -E 's/!\[[^\]]*\]\(([^\)]+)\)/\1/g')
            
            while IFS= read -r image; do
              # Clean the image path
              image_path=$(echo "$image" | sed 's/[[:space:]]*$//')
              
              # Check if image path is empty
              if [[ -z "$image_path" ]]; then
                echo "::warning file=$file::Empty image reference found"
                exit_code=1
                continue
              fi
              
              # Get the file extension
              extension=$(echo "$image_path" | grep -oE '\.[a-zA-Z0-9]+$' | tr '[:upper:]' '[:lower:]')
              
              # Check if extension is valid
              if [[ ! "$extension" =~ \.($VALID_EXTENSIONS)$ ]]; then
                echo "::warning file=$file::Invalid image extension in $image_path. Valid extensions are: $VALID_EXTENSIONS"
                exit_code=1
                continue
              fi
              
              # Convert relative path to absolute (assuming images are in static/images)
              if [[ "$image_path" =~ ^/ ]]; then
                full_path="static${image_path}"
              else
                full_path="static/images/${image_path}"
              fi
              
              # Check if image file exists
              if [[ ! -f "$full_path" ]]; then
                echo "::warning file=$file::Image not found: $image_path"
                exit_code=1
              fi
            done <<< "$images"
          done
          
          if [[ $exit_code -ne 0 ]]; then
            echo "::error::Image validation failed. Please check the warnings above."
            exit 1
          else
            echo "All image references are valid!"
          fi

      - name: Comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const result = '${{ job.status }}';
            const message = result === 'success' 
              ? '✅ All image references in markdown files are valid!'
              : '❌ Image validation failed. Check the workflow logs for details.';
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: message
            });